openapi: 3.0.0
info:
  title: CORE API - Integración de Delivery Platform (Agregadores)
  description: Integracion de Delivery Platform, está diseñada para poder entregar menus hacia varias plataformas de delivery como (Uber, Rappi, PedidosYa, Etc), esta integración está ligada a **GrupoKFC**.
    Esta documentación detalla la funcionalidad que expone el CORE-API que es una parte de la integración Delivery Platform el cual permite los flujos correctos de sincronización de menus, configuración de menus, inicio de sincronizaciones con maxpoint, visualizacion de registros de eventos, control y almacen de menus, etc.
    
    
    **Autorización**
    
    
    Los métodos expuestos en el CORE API solo son accesibles mediante un token de acceso, dicho token debe ser enviado en el encabezado (Header) de la petición.
  version: 1.0.0

servers:
  - url: https://devdeunapagos.kfc.com.ec/api/v1/menus
    description: Testing environments

tags:
  - name: Autenticacion /auth
    description: Es el metodo de autenticación para los usuarios a nivel de la APP-WEB (UI)
  - name: Agregadores
    description: Administrador de agregadores
  - name: Configuraciones
    description: Gestión de la configuración para la sincronización de agregadores
  - name: Sincronización
    description: Métodos de sincronización con MaxPoint.
  - name: Menú
    description: Métodos para la obtención de los menús y entidades relacionadas al menú.


paths:
  /auth/login:
    post:
      tags:
        - Autenticacion /auth
      summary: Metodo de autenticación para la interfaz de usuario (APP-WEB)
      security: []
      requestBody:
        description: Es la petición que se hace desde la WEB (Cliente) hacia el BACKEND de autenticación.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Cuando el inicio de sesión es correcto se debería retornar esta respuesta, la cual es usada para la siguiente consulta de obtención de informacion completa del usuario. esto puede revisarse en jwt.io para ver el contenido del token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
        '401':
          description: Error al autenticar al usuario (credenciales no válidas)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorFailLogin'
        '400':
          description: Error interno (mal formacion de json), (falta de informacion en la solicitud)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  /auth/refresh:
    post:
      tags:
        - Autenticacion /auth
      summary: Método de autenticación para refrescar el token anterior generado,
      requestBody:
        description: Aquí en la solicitud se debe pasar el refreshToken una vez el accessToken haya expirado, con esto generamos un nuevo accessToken y un nuevo refreshToken
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
      responses:
        '200':
          description: Cuando el refresco del token es correcto vamos a recibir nuevamente esta información actualizada un accessToken y un refreshToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
        '400':
          description: Cuando el token de refresco ha expirado o ocurrio un error al intentar refresar se retornará este error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  
  /auth/account/my-account:
    get:
      tags:
        - Autenticacion /auth
      summary: Se obtiene información del usuario logeado.
      # parameters:
      #   - in: header
      #     name: Authorization
      #     schema:
      #       type: string
      #       format: Bearer
      #     required: false
      responses:
        '200':
          description: Si la consulta es correcta se muestra los datos correspondientes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyAccount'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'

  /aggregators:
    get:
      tags:
        - Agregadores
      summary: Retorna la lista de todos los agregadores
      description: Este endpoint es utilizado para obtener la lista de agregadores es decir [ Uber, Rappi, Peya, Etc ...] es utilizado principalmente para la App-Web (UI) en la sección de configuración.
      # parameters:
      #   - in: header
      #     name: Authorization
      #     schema:
      #       type: string
      #       format: Bearer
      #     required: true
      responses:
        '200':
          description: Cuando la solicitud se completa con éxito retorna todos los agregadores.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aggregator'
        
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  /statusmenu:
    get:
      tags:
        - Agregadores
      summary: Obtiene las estadísticas de los menús enviados
      description: Este endpoint es utilizado para obtener el número de menús enviados correctamente, menús sincronizados, menús con errores y menús por agregadores.

      responses:
        '200':
          description: Cuando la solicitud se completa con éxito se obtienen las estadísticas de los agregadores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatusMenu'

        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'

  /statusmenu/all:
    post:
      tags:
        - Agregadores
      summary: Obtiene datos de los menús enviados hacia los agregadores
      description: Retorna el syncrosId, nombre del agregador, estado del envío, modo de envío, payload enviado, respuesta del agregador, identificador del restaurante y el identificador de la cadena.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                aggregators:
                  type: array
                  items:
                    type: string
                  description: Lista de agregadores
                  example: [ "UBER","PEYA" ]
                status:
                  type: array
                  items:
                    type: string
                  description: Lista de estados (OK, PENDING, FAILED)
                  example: ["OK"]
                chains:
                  type: array
                  items:
                    type: integer
                  description: Lista de identificadores de cadenas
                  example: [10]
                restaurants:
                  items:
                    type: integer
                  description: Lista de identificadores de restaurants
                  type: array
                  example: [72]
      responses:
        '200':
          description: Cuando la solicitud se completa con éxito se retorna los datos de los menús (payloads) enviados hacia los agregadores.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatusMenuPayloads'

        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  /chains/<Agregador>:
    get:
      tags:
        - Agregadores
      summary: Obtiene los datos de la cadena
      description: Retorna datos de la cadena.

      responses:
        '200':
          description: Cuando la solicitud se completa con éxito se retorna los datos de la cadena
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/chainsResponse'

        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  /chains/<Agregador>/<number>:
    get:
      tags:
        - Agregadores
      summary: Obtiene los datos de una  cadena
      description: Retorna datos de una cadena.

      responses:
        '200':
          description: Cuando la solicitud se completa con éxito se retorna los datos de la cadena
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chainsResponseToGetChain'

        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  /chains:
    post:
      tags:
        - Agregadores
      summary: Registra los datos de una cadena
      description: Retorna el codigo y estado del registro.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                aggregator:
                  type: string
                  example: "UBER"
                cdn_description:
                  type: string
                  example: "KENTUCKY FRIED CHICKEN"
                cdn_name:
                  type: string
                  example: "KENTUCKY FRIED CHICKEN"
                cdn_id:
                  type: integer
                  example: 10
                client_id:
                  type: string
                  example: ""
                client_secret:
                  type: string
                  example: ""
                grand_type:
                  type: string
                  example: "client_credentials"
                scope:
                  type: string
                  example: "eats.store"
                url_login:
                  type: string
                  example: "https://login.uber.com/"
                url_api:
                  type: string
                  example: "https://api.uber.com/"
                url_deny:
                  type: string
                  example: "v1/delivery/order/{order}/deny"
                endpoint_menu:
                  type: string
                  example: "/v2/eats/stores"
                endpoint_producto:
                  type: string
                  example: "/v2/eats/stores"
                status:
                  type: boolean
                  example: true
                payment_method_code:
                  type: string
                  example: "192"
      responses:
        '200':
          description: Cuando la solicitud se completa con éxito se retorna los datos de los menús (payloads) enviados hacia los agregadores.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                    description: Código de respuesta HTTP.
                  message:
                    type: string
                    example: "Chain created"
                    description: Detalle de la respuesta.

        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  /chains/:
    put:
      tags:
        - Agregadores
      summary: Actualiza los datos de una cadena
      description: Retorna el codigo y estado del registro.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                aggregator:
                  type: string
                  example: "UBER"
                cdn_description:
                  type: string
                  example: "KENTUCKY FRIED CHICKEN"
                cdn_name:
                  type: string
                  example: "KENTUCKY FRIED CHICKEN"
                cdn_id:
                  type: integer
                  example: 10
                client_id:
                  type: string
                  example: ""
                client_secret:
                  type: string
                  example: ""
                grand_type:
                  type: string
                  example: "client_credentials"
                scope:
                  type: string
                  example: "eats.store"
                url_login:
                  type: string
                  example: "https://login.uber.com/"
                url_api:
                  type: string
                  example: "https://api.uber.com/"
                url_deny:
                  type: string
                  example: "v1/delivery/order/{order}/deny"
                endpoint_menu:
                  type: string
                  example: "/v2/eats/stores"
                endpoint_producto:
                  type: string
                  example: "/v2/eats/stores"
                status:
                  type: boolean
                  example: true
                payment_method_code:
                  type: string
                  example: "192"
      responses:
        '200':
          description: Cuando la solicitud se completa se retorna un codigo y mensaje de éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                    description: Código de respuesta HTTP.
                  message:
                    type: string
                    example: "Chain updated"
                    description: Detalle de la respuesta.

        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  /chains/<number>:
    delete:
      tags:
        - Agregadores
      summary: Elimina una cadena
      description: Retorna el codigo y estado de la operación.

      responses:
        '200':
          description: Cuando la solicitud se completa con éxito se retorna un codigo y mensaje de exito
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                    description: Código de respuesta HTTP.
                  message:
                    type: string
                    example: "Chain deleted"
                    description: Detalle de la respuesta.

        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  /restaurants/list:
    post:
      tags:
        - Agregadores
      summary: Obtiene datos de los restaurantes
      description: Retorna la información de los restaurantes.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: Número de paágina de filtrado
                  example: 1
                rows:
                  type: integer
                  description: Número de registros a mostrar
                  example: 1
                order:
                  type: string
                  description: Orden a mostrar la información
                  example: DESC
                chains:
                  type: array
                  items:
                    type: integer
                  description: Lista de identificadores de cadenas
                  example: [ 10 ]

      responses:
        '200':
          description: Cuando la solicitud se completa con éxito se retorna los datos los restaurantes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/restaurantResponse'

        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  /restaurants/<restId>:
    get:
      tags:
        - Agregadores
      summary: Obtiene datos de un restaurant
      description: Retorna la información de un restaurant
      responses:
        '200':
          description: Cuando la solicitud se completa con éxito se retorna los datos los restaurantes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/restaurantResponsebyRestId'

        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
    delete:
      tags:
        - Agregadores
      summary: Elimina un restaurant
      description: Retorna el código y estado de la operación.

      responses:
        '200':
          description: Cuando la solicitud se completa con éxito se retorna un codigo y mensaje de exito
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                    description: Código de respuesta HTTP.
                  message:
                    type: string
                    example: "Restaurant deleted"
                    description: Detalle de la respuesta.

        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'

  /restaurants/:
    post:
      tags:
        - Agregadores
      summary: Registra los datos de un restaurant
      description: Registra la información de un restaurant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/restaurantResponsebyRestId'

      responses:
        '200':
          description: Cuando la solicitud se completa con éxito se retorna código y mensaje de la operación
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                    description: Código de respuesta HTTP.
                  message:
                    type: string
                    example: "Restaurant created"
                    description: Detalle de la respuesta.

        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
    put:
      tags:
        - Agregadores
      summary: Actualiza los datos de un restaurant
      description: Actualiza la información de un restaurant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/restaurantResponsebyRestId'

      responses:
        '200':
          description: Cuando la solicitud se completa con éxito se retorna código y mensaje de la operación
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                    description: Código de respuesta HTTP.
                  message:
                    type: string
                    example: "Restaurant updated"
                    description: Detalle de la respuesta.

        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'

  /menu/sendmenu:
    post:
      tags:
        - Agregadores
      summary: Envía menús hacia los agregadores
      description: Este endpoint es utilizado para enviar los menús hacia los agregadores.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token_totp:
                  type: string
                  description: Token Totp
                request_menu:
                  type: array
                  items:
                    type: object
                    properties:
                      sync_ids:
                        type: array
                        items:
                          type: string
                        description: IDs de sincronización
                        example: ["sync123"]
                      checksums:
                        type: array
                        items:
                          type: string
                        description: Lista de Checksums de menus
                        example: ["abc123"]
                      metadata:
                        type: object
                        properties:
                          platforms:
                            type: array
                            items:
                              type: string
                            description: Lista de agregadores
                            example: [ "platform1", "platform2" ]
                          restaurant:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: ID del restaurante
                                  example: "rest1"
                                chain_id:
                                  type: string
                                  description: ID de la cadena
                                  example: "chain1"
                      categories:
                        type: array
                        items:
                          type: object
                          properties:
                            syn_id:
                              type: string
                              description: ID de la sincronización
                              example: "cat1"
                            checksum:
                              type: string
                              description: Checksum del menú
                              example: "cat1"
                            id:
                              type: string
                              description: ID de la categoría
                              example: "cat1"
                            products:
                              type: array
                              items:
                                type: string
                              description: Lista de ids productos
                              example: [ "prod1" ]
      responses:
        '200':
          description: Cuando la solicitud se completa con éxito se envían los menús hacia los agregadores.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestMenu'



        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'

  /configurations/last:
    get:
      tags:
        - Configuraciones
      summary: Se obtiene la ultima configuracion registrada.
      # parameters:
      #   - in: header
      #     name: Authorization
      #     schema:
      #       type: string
      #       format: Bearer
      #     required: true
      responses:
        '200':
          description: Si se guardo la configuracion, retornará la siguiente información.
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/ConfigurationWrapperCustom'
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  /configurations:
    put:
      tags:
        - Configuraciones
      summary: Creación y actualización de la configuración parar la ejecución de sincronización de los agregadores.
      # parameters:
      #   - in: header
      #     name: Authorization
      #     schema:
      #       type: string
      #       format: Bearer
      #     required: true
      requestBody:
        description: |
          Esquema de configuración. 
          
          Escenario 1.- Cuando el campo "syncMaxPoint" es "true" se empieza la sincronización con Maxpoint a la hora establecida "syncTime".
          
          Escenario 2.- Cuando el campo "syncMaxPoint" es "false" se desactiva la sincronizacón con Maxpoint.
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateConfigurationRequest'
      responses:
        '200':
          description: Si el proceso se ejecuta correctamente mostrará la siguiente respuesta.
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/CustomResponse'
        '400':
          description: El servidor no puede o no quiere procesar la solicitud debido a algo que se percibe como un error del cliente (por ejemplo, sintaxis de solicitud mal formada, trama de mensajes de solicitud no válida o enrutamiento de solicitud engañoso).El servidor no puede o no quiere procesar la solicitud debido a algo que se percibe como un error del cliente (por ejemplo, sintaxis de solicitud mal formada, trama de mensajes de solicitud no válida).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  /sync:
    get:
      tags:
        - Sincronización
      summary: Método que obtiene el historial de las sincronizaciones con Maxpoint.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            example: 1
            description: Número de página
        - in: query
          name: size
          schema:
            type: integer
            example: 10
          description: Número de registros por página
        - in: header
          name: Authorization
          schema:
            type: string
            format: Bearer
          required: true
      responses:
        '200':
          description: Si el proceso se ejecuta correctamente mostrará la siguiente respuesta.
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/SyncHistoryResponse'
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  
  /dashboard/sync/error/{id}:
    get:
      tags:
        - Sincronización
      summary: Método que obtiene el historial de errores de una Sincronización específica de Maxpoint
      parameters:
        - in: path
          name: id
          schema:
            type: string
            example: 6675cd09a04f3b451a6c5f57
          required: true
          description: Identificador de la sincronización
        - in: header
          name: Authorization
          schema:
            type: string
            format: Bearer
          required: true
      responses:
        '200':
          description: Si el proceso se ejecuta correctamente mostrará la siguiente respuesta.
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/SyncErrorResponse'
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  

  /sync/all:
    post:
      tags:
        - Sincronización
      summary: Método para la ejecución de la sincronización inmediata.
      # parameters:
      #   - in: header
      #     name: Authorization
      #     schema:
      #       type: string
      #       format: Bearer
      #     required: true
      responses:
        '200':
          description: Si el proceso se ejecuta correctamente mostrará la siguiente respuesta.
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/CustomResponseSync'
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  
  /sync/verify:
    get:
      tags:
        - Sincronización
      summary: Método para la verificación de la existencia de una sincronización en ese instante de la consulta.
      # parameters:
      #   - in: header
      #     name: Authorization
      #     schema:
      #       type: string
      #       format: Bearer
      #     required: true
      responses:
        '200':
          description: Si el proceso se ejecuta correctamente mostrará la siguiente respuesta.
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/verifyResponse'
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'

  /menu/chainsall:
    post:
      tags:
        - Menú
      summary: Método para la obtención de las cadenas de suministro.
      #parameters:
      #  - in: header
      #    name: Authorization
      #    schema:
      #      type: string
      #      format: Bearer
      #    required: true
      responses:
        '200':
          description: Si el proceso se ejecuta correctamente mostrará la siguiente respuesta.
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Chains'
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  /menu/findrestaurants:
    post:
      tags:
        - Menú
      summary: Método para la obtención de los restaurantes o tiendas.
      #parameters:
      #  - in: header
      #    name: Authorization
      #    schema:
      #      type: string
      #      format: Bearer
      #    required: true
      requestBody:
        description: El EndPoint espera recibir una lista de id que representan las cadenas seleccionadas que se desean obtener sus restaurantes.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindRestaurantsRequest'
      responses:
        '200':
          description: Si el proceso se ejecuta correctamente mostrará la siguiente respuesta.
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Restaurants'
        '204':
          description: Si el proceso no devuelve los datos esperados, porque no existe la información requerida.
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/ResponseDataNoExists'
        '400':
          description: El servidor no puede o no quiere procesar la solicitud debido a algo que se percibe como un error del cliente (por ejemplo, sintaxis de solicitud mal formada, trama de mensajes de solicitud no válida o enrutamiento de solicitud engañoso).El servidor no puede o no quiere procesar la solicitud debido a algo que se percibe como un error del cliente (por ejemplo, sintaxis de solicitud mal formada, trama de mensajes de solicitud no válida).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  /menu/findmenus:
    post:
      tags:
        - Menú
      summary: Método para la obtención de los menús agrupados por sincronización basado en los filtros.
      requestBody:
        description: El EndPoint espera recibir una lista de id que representan las cadenas seleccionadas que se desean obtener sus restaurantes.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindMenusRequest'
            examples:
              Payload1:
                summary: Payload sin filtro nombre menú
                description: Payload enviado al EndPoint sin el campo de filtro por nombre menú añadido. Esto realiza la consulta solo basandose a los filtros principales.
                value:
                  restaurants:
                    - id: 16
                      codeStore: "F001"
                  dates:
                    startDate: "2024-07-08T00:00:00.000Z"
                    endDate: "2024-07-09T00:00:00.000Z"
                  page: 1
                  pageSize: 5
              Payload2:
                summary: Payload con filtro nombre menú
                description: Payload enviado al EndPoint con el campo de filtro por nombre menú añadido. Esto aumenta el filtro de nombre menú para la búsqueda. Este campo no es obligatorio.
                value:
                  restaurants:
                    - id: 16
                      codeStore: "F001"
                  dates:
                    startDate: "2024-07-08T00:00:00.000Z"
                    endDate: "2024-07-09T00:00:00.000Z"
                  page: 1
                  pageSize: 5
                  otherFilters:
                    searchNameMenu:
                      enable: true
                      nameMenu: "RAPPI"
      responses:
        '200':
          description: Si el proceso se ejecuta correctamente mostrará la siguiente respuesta.
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/FindMenusResponse'
        '204':
          description: Si el proceso no devuelve los datos esperados, porque no existe la información requerida.
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/ResponseDataNoExists'
        '400':
          description: El servidor no puede o no quiere procesar la solicitud debido a algo que se percibe como un error del cliente (por ejemplo, sintaxis de solicitud mal formada, trama de mensajes de solicitud no válida o enrutamiento de solicitud engañoso).El servidor no puede o no quiere procesar la solicitud debido a algo que se percibe como un error del cliente (por ejemplo, sintaxis de solicitud mal formada, trama de mensajes de solicitud no válida).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAuth'
              examples:
                Invalid Token:
                  summary: Token Invalido
                  value:
                    code: 401
                    message: Token de autenticación inválido
                Invalid Scheme:
                  summary: Esquema invalido
                  value:
                    code: 401
                    message: Esquema de autenticacion no valido
                Invalid Header:
                  summary: Header de autorización no proporcionado
                  value:
                    code: 401
                    message: Encabezado de autorización no proporcionado
        '500':
          description: Error interno en el servidor ocurrido a nivel de codigo del servidor, la respuesta puede variar segun el tipo de error capturado por el API Restful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'


components:
  schemas:
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          description: Es el usuario de la cuenta del cliente al acceder a la pantalla de Login
          example: admin
        password:
          type: string
          description: Es la contraseña de la cuenta del cliente al acceder a la pantalla de Login
          example: "12345"
    JwtResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: Token de autenticación del Usuario se puede revisar el token en (jwt.io)
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTkwNzMyOTcsImlkIjoiNjY0NTNiMjIwMjZkNzBlMTA3ZDk0NDU1IiwidXNlcm5hbWUiOiJhZG1pbiJ9.akLOKrBWhF0xk44fM7PMcsuX-8VhBCjIbDN_VgR7MXQ
        refreshToken:
          type: string
          description: Token para refrescar el token de acceso ( accessToken )
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTk1OTE2OTcsImlkIjoiNjY0NTNiMjIwMjZkNzBlMTA3ZDk0NDU1IiwidXNlcm5hbWUiOiJhZG1pbiJ9.aPEHGpGd6SpXiAYoyIoDo4SUwOpoGqDO-tgrTax_Vrk
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          description: Codigo de error (Mismo que HTTP Response)
          example: 400
        message:
          type: string
          description: Detalle del error ocurrido al consumir el API
          example: Invalid login body

    ErrorRequest:
      type: object
      properties:
        code:
          type: number
          description: No es posible procesar la petición. por ejemplo, sintaxis de solicitud mal formada, trama de mensajes de solicitud no válida
          example: 400
        message:
          type: string
          description: Detalle del error ocurrido al consumir el API
          example: Invalid body

    ErrorInternal:
      type: object
      properties:
        code:
          type: number
          description: No es posible procesar la petición error interno en el servidor ocurrido a nivel de codigo del servidor.
          example: 500
        message:
          type: string
          description: Detalle del error ocurrido al consumir el API
          example: Internal Server Error

    ErrorResponseFailedRefreshToken:
      type: object
      properties:
        code:
          type: number
          description: Codigo de error (Mismo que HTTP Response)
          example: 400
        message:
          type: string
          description: Detalle del error ocurrido al consumir el API
          example: Invalid token
    ErrorFailLogin:
      type: object
      properties:
        code:
          type: number
          description: Codigo de Error que representa el fallo de inicio de sesion (credenciales incorrectas)
          example: 400
        message:
          type: string
          description: Detalle del error ocurrido al consumir el API
          example: The credentials are not valid
    NoAuth:
      type: object
      properties:
        code:
          type: number
          description: El usuario no se ha autenticado en el sistema.
          example: 401
        message:
          type: string
          description: Detalle del error ocurrido al consumir el API
          example: Token de autenticación inválido
    RefreshRequest:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTk1OTI2MjcsImlkIjoiNjY0NTNiMjIwMjZkNzBlMTA3ZDk0NDU1IiwidXNlcm5hbWUiOiJhZG1pbiJ9.AvQ9yI2WP5IuZNzls9LJGLwuvPGI3AC8j7YA8gu_Uq8
          description: Token de autenticación para la ejecución del refresh.
    MyAccount:
      type: object
      properties:
        username:
          type: string
          example: admin
          description: Nombre de usuario que sirve como identificación por cuenta.
        email:
          type: string
          example: admin@admin.com
          description: Correo electrónico perteneciente a la cuenta.
        firstName:
          type: string
          example: Douglas
          description: Nombre perteneciente a la cuenta.
        lastName:
          type: string
          example: Natha
          description: Apellido perteneciente a la cuenta.

    Aggregator:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Código de identificación del agregador.
        name:
          type: string
          example: Uber
          description: Nombre del agregador.
        isActive:
          type: boolean
          example: true
          description: Campo de identificación si el agregador se encuentra activo.

    ConfigurationAggregator:
      type: object
      properties:
        aggregator:
          $ref: '#/components/schemas/Aggregator'
        syncTime:
          type: string
    Configuration:
      type: object
      properties:
        id:
          type: string
          example: 6675cd09a04f3b451a6c5f57
        syncMaxPoint:
          type: boolean
          example: true
        syncTime:
          type: string
        aggregators":
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationAggregator'
    ConfigurationWrapper:
      type: object
      properties:
        last:
          $ref: '#/components/schemas/Configuration'

    CreateOrUpdateConfigurationAggregatorRequest:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Código de identificación del agregador.
        syncTime:
          type: string
          example: 10:00:00
          description: Tiempo definido para la ejecución de la sincronización del agregador.
    CreateOrUpdateConfigurationRequest:
      type: object
      properties:
        syncMaxPoint:
          type: boolean
          example: true
          description: Campo para la definición de sincronización con MaxPoint.
        syncTime:
          type: string
          example: 10:00:00
          description: Tiempo definido para la ejecución de la sincronización.
        aggregators:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrUpdateConfigurationAggregatorRequest'

    ConfigurationAggregatorNew:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Código de identificación del agregador.
        name:
          type: string
          example: Uber
          description: Nombre del agregador.
        syncTime:
          type: string
          example: 15:00:00
          description: Tiempo definido para la sincronización del agregador.
        active:
          type: string
          example: true
          description: Campo para la identificación si el agregador se encuentra activo.
    ConfigurationCustom:
      type: object
      properties:
        id:
          type: string
          example: 6675cd09a04f3b451a6c5f57
          description: Identificación de la configuración.
        syncMaxPoint:
          type: boolean
          example: true
          description: Campo de identificación si la sincronización se realiza con MaxPoint
        syncTime:
          type: string
          example: 15:00:00
          description: Tiempo definido para la sincronización con MaxPoint.
        aggregators:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationAggregatorNew'
    ConfigurationWrapperCustom:
      type: object
      properties:
        last:
          $ref: '#/components/schemas/ConfigurationCustom'

    CustomResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
          description: Código de respuesta HTTP
        message:
          type: string
          example: Configuración guardada
          description: Mensaje que detalla la respuesta de la petición.

    CustomResponseSync:
      type: object
      properties:
        code:
          type: integer
          example: 200
          description: Código de respuesta HTTP
        message:
          type: string
          example: Sincronización ejecutada
          description: Mensaje que detalla la respuesta de la petición.

    SyncHistoryResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              syncros_id:
                type: string
                example: "01ef3e10-761c-64bf-8af0-2606f1302901"
              start_time:
                type: string
                format: date-time
                example: "2024-07-09 16:29:49.375 +0000 UTC"
              end_time:
                type: string
                format: date-time
                nullable: true
                example: "2024-07-09 16:35:49.375 +0000 UTC"
              error_msg:
                type: string
                example: ""
              status:
                type: string
                example: "FINISHED"
        total_records:
          type: integer
          example: 7

    SyncErrorResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: "668d62e9217f587b26adbd73"
          aggregate_id:
            type: string
            example: "01ef3e0e-0c6c-6bb7-8af0-2606f1302901"
          event_type:
            type: string
            example: "MenuMaxpointSyncError"
          metadata:
            type: array
            items:
              type: object
              properties:
                Key:
                  type: string
                  example: "syncid"
                Value:
                  type: string
                  example: "01ef3e0e-0c6c-6bb7-8af0-2606f1302901"
          data:
            type: string
            example: "grpc core-engine: failed to change state sync: No se encontró el syncros con id: 01ef3e0e-0c6c-6bb7-8af0-2606f1302901"
          fecha:
            type: string
            format: date-time
            example: "2024-07-09 11:18:49"
          created_at:
            type: string
            format: date-time
            example: "2024-07-09T11:18:49.525-05:00"

    Chains:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            example: 3
            description: Identificador de la cadena.
          description:
            type: string
            example: "BASKIN ROBBINS"
            description: Descripción de la cadena.
          tradename:
            type: string
            example: "BASKIN ROBBINS"
            description: Nombre comercial de la cadena.
    FindRestaurantsRequest:
      type: object
      properties:
        id:
          type: array
          items:
            type: integer
            example: [1, 2, 3, 10]
            description: Lista de identificadores de cadenas.
    Restaurants:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            example: 3
            description: Identificador del resturante.
          idChain:
            type: integer
            example: 10
            description: Identificador de la cadena.
          codeStore:
            type: string
            example: "K002"
            description: Código de la tienda.
    StatusMenu:
      type: object
      properties:
        data:
          type: object
          properties:
            menusSend:
              type: object
              properties:
                total:
                  type: integer
                  example: 14
            menusSyncMxp:
              type: object
              properties:
                total:
                  type: integer
                  example: 0
            menusErrors:
              type: object
              properties:
                total:
                  type: integer
                  example: 1
            agregadores:
              type: array
              items:
                type: object
                properties:
                  id_group:
                    type: string
                    example: "01ef7a07-d49d-6022-9586-26cf239f42cd"
                  name_aggregator:
                    type: string
                    example: "PEYA"
                  total:
                    type: integer
                    example: 15

    StatusMenuPayloads:
      type: array
      items:
        type: object
        properties:
          syncrosAggId:
            type: string
            example: "01ef7a00-0ddd-6edb-952a-96e46d2b73cd"
          aggregatorName:
            type: string
            example: "UBER"
          status:
            type: string
            example: "OK"
          mode:
            type: string
            example: "MANUAL"
          payloadAggregator:
            type: object
            example: { }
          aggregatorResponse:
            type: string
            example: "204"
          storeId:
            type: integer
            example: 72
          cdnId:
            type: integer
            example: 10

    chainsResponse:
      type: array
      items:
        type: object
        properties:
          aggregator:
            type: string
            example: "UBER"
          cdn_description:
            type: string
            example: "KENTUCKY FRIED CHICKEN"
          cdn_name:
            type: string
            example: "KENTUCKY FRIED CHICKEN"
          cdn_id:
            type: integer
            example: 10
          client_id:
            type: string
            example: ""
          client_secret:
            type: string
            example: ""
          grand_type:
            type: string
            example: "client_credentials"
          scope:
            type: string
            example: "eats.store"
          url_login:
            type: string
            example: "https://login.uber.com/"
          url_api:
            type: string
            example: "https://api.uber.com/"
          url_deny:
            type: string
            example: "v1/delivery/order/{order}/deny"
          endpoint_menu:
            type: string
            example: "/v2/eats/stores"
          endpoint_producto:
            type: string
            example: "/v2/eats/stores"
          status:
            type: boolean
            example: true
          payment_method_code:
            type: string
            example: "192"

    chainsResponseToGetChain:
        type: object
        properties:
          aggregator:
            type: string
            example: "UBER"
          cdn_description:
            type: string
            example: "KENTUCKY FRIED CHICKEN"
          cdn_name:
            type: string
            example: "KENTUCKY FRIED CHICKEN"
          cdn_id:
            type: integer
            example: 10
          client_id:
            type: string
            example: ""
          client_secret:
            type: string
            example: ""
          grand_type:
            type: string
            example: "client_credentials"
          scope:
            type: string
            example: "eats.store"
          url_login:
            type: string
            example: "https://login.uber.com/"
          url_api:
            type: string
            example: "https://api.uber.com/"
          url_deny:
            type: string
            example: "v1/delivery/order/{order}/deny"
          endpoint_menu:
            type: string
            example: "/v2/eats/stores"
          endpoint_producto:
            type: string
            example: "/v2/eats/stores"
          status:
            type: boolean
            example: true
          payment_method_code:
            type: string
            example: "192"

    restaurantResponse:
      type: object
      properties:
        page:
          type: integer
          example: 1
        rows:
          type: integer
          example: 5
        order:
          type: string
          example: "DESC"
        total:
          type: integer
          example: 781
        data:
          type: array
          items:
            type: object
            properties:
              storeCode:
                type: string
                example: ""
              restId:
                type: integer
                example: 1236
              uberId:
                type: string
                example: "1236"
              rappiId:
                type: string
                example: "1236"
              peyaId:
                type: string
                example: "1236"
              didiAppShopId:
                type: string
                example: "1236"
              justoId:
                type: string
                example: "1236"
              active:
                type: boolean
                example: true
              store:
                type: object
                properties:
                  cdn_name:
                    type: string
                    example: ""
                  latitude:
                    type: integer
                    example: 0
                  longitude:
                    type: integer
                    example: 0
                  rst_id:
                    type: integer
                    example: 0
                  ciu_id:
                    type: integer
                    example: 0
                  rst_cod_tienda:
                    type: string
                    example: ""
                  rst_descripcion:
                    type: string
                    example: ""
                  rst_direccion:
                    type: string
                    example: ""
                  cookingTime:
                    type: integer
                    example: 0

    restaurantResponsebyRestId:
      type: object
      properties:
        storeCode:
          type: string
          example: ""
        restId:
          type: integer
          example: 1236
        uberId:
          type: string
          example: "1236"
        rappiId:
          type: string
          example: "1236"
        peyaId:
          type: string
          example: "1236"
        didiAppShopId:
          type: string
          example: "1236"
        justoId:
          type: string
          example: "1236"
        active:
          type: boolean
          example: true
        store:
          type: object
          properties:
            cdn_name:
              type: string
              example: ""
            latitude:
              type: integer
              example: 0
            longitude:
              type: integer
              example: 0
            rst_id:
              type: integer
              example: 0
            ciu_id:
              type: integer
              example: 0
            rst_cod_tienda:
              type: string
              example: ""
            rst_descripcion:
              type: string
              example: ""
            rst_direccion:
              type: string
              example: ""
            cookingTime:
              type: integer
              example: 0

    RequestMenu:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: "OK"

    FindMenusRequest:
      type: object
      properties:
        restaurants:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 16
                description: Identificador del restaurante.
              codeStore:
                type: string
                example: "F001"
                description: Código de la tienda/restaurante.
        dates:
          type: object
          properties:
            startDate:
              type: string
              example: "2024-07-08T00:00:00.000Z"
              description: Fecha de filtro donde debe iniciar la búsqueda.
            endDate:
              type: string
              example: "2024-07-09T00:00:00.000Z"
              description: Fecha de filtro donde debe finalizar la búsqueda.
        page:
          type: integer
          example: 1
          description: Número de la página que se encuentra.
        pageSize:
          type: integer
          example: 5
          description: Tamaño de la página actual.
        otherFilters:
          type: object
          properties:
            searchNameMenu:
              type: object
              properties:
                enable:
                  type: boolean
                  example: true
                  description: Indicador si está habilitada la búsqueda por nombre de menú.
                nameMenu:
                  type: string
                  example: "RAPPI"
                  description: Nombre de menú.
    FindMenusResponse:
      type: object
      properties:
        groupSync:
          type: array
          items:
            type: object
            properties:
              syncrosId:
                type: string
                example: "01ef3e20-2ae1-69ab-9a35-36d3764a73e8"
                description: Identificador de la sincronización.
              startTime:
                type: string
                example: "2024-07-09T18:22:15Z"
                description: Tiempo de inicio de la sincronización.
              endTime:
                type: string
                example: "2024-07-09T18:28:56Z"
                description: Tiempo de finalización de la sincronización.
              status:
                type: string
                example: "FINISHED"
                description: Estado de la sincronización.
              menus:
                type: array
                items:
                  type: string
                  example: "61a562bf7a33ccc39ce6cf93487db36bcd5227ef3d910531681ddc16d46eb22c"
                  description: Lista de checksum que representa a los menús pertenecientes a la sincronización.
        groupMenu:
          type: array
          items:
            type: object
            properties:
              checksum:
                type: string
                example: "61a562bf7a33ccc39ce6cf93487db36bcd5227ef3d910531681ddc16d46eb22c"
                description: Identificador (checksum) del menú.
              menus:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "01ef3d85-47c2-6f62-8312-bedb522f67d8"
                      description: Identificador del menú.
                    title:
                      type: string
                      example: "RAPPI"
                      description: Titulo del menú.
                    subtitle:
                      type: string
                      example: ""
                      description: Subtitulo del menú.
                    categoryids:
                      type: array
                      items:
                        type: string
                        example: "E217B666-88FD-EE11-8076-C89665503CDF"
                        description: Lista de las categorias pertenecientes al menú.
              categories:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "E217B666-88FD-EE11-8076-C89665503CDF"
                      description: Identificador de la categoria.
                    title:
                      type: string
                      example: "APPDESCUENTOS"
                      description: Titulo de la categoria.
                    subtitle:
                      type: string
                      example: ""
                      description: Subtitulo de la categoria.
                    entities:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            example: "46665"
                            description: Identificador del item.
                          type:
                            type: string
                            example: "ITEM"
                            description: Tipo del item.
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "46665"
                      description: Identificador del item (producto).
                    title:
                      type: string
                      example: "CAJA CLASICO X 2"
                      description: Titulo del item.
                    description:
                      type: string
                      example: "Rollo clasico de canela o chocolate"
                      description: Description del item.
                    imageurl:
                      type: string
                      example: "https://samercadito.blob.core.windows.net/imagenesv3/domicilio_33882_658x744_1703099153.png"
                      description: Dirección http de la imagen del producto
                    priceinfo:
                      type: object
                      properties:
                        price:
                          type: integer
                          example: 360
                          description: Precio del producto.
                        coreprice:
                          type: integer
                          example: 0
                          description: Precio central del producto.
                        pricedbyunit:
                          type: object
                          properties:
                            measurementtype:
                              type: string
                              example: " "
                              description: Tipo de medida del producto.
                            lengthunit:
                              type: integer
                              example: 0
                              description: Logintud por unidad.
                            weightunit:
                              type: integer
                              example: 0
                              description: Ancho por unidad.
                            volumeunit:
                              type: integer
                              example: 0
                              description: Volumen por unidad.
        pagination:
          type: object
          properties:
            page:
              type: integer
              example: 1
              description: Número de la página.
            pageSize:
              type: integer
              example: 5
              description: Tamaño de la página.
            totalPages:
              type: integer
              example: 2
              description: Tamaño total de las páginas.
            totalRecords:
              type: integer
              example: 8
              description: Total de los registros.


    verifyResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
          description: Código de respuesta HTTP.
        message:
          type: string
          example: "Done"
          description: Mensaje de respuesta.
        valueSync:
          type: boolean
          example: true
          description: Campo de validación si existe o no una sincronización activa.
    
    ResponseDataNoExists:
      type: object
      properties:
        code:
          type: integer
          example: 204
          description: Código de respuesta HTTP.
        message:
          type: string
          example: "No query data exists"
          description: Detalle de la respuesta.
  
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Este esquema utiliza el token Bearer para la autenticación. 
        Asegúrate de enviar el token en el encabezado de la solicitud como se muestra a continuación:
        
        `Authorization: Bearer {{TOKEN}}`

security:
  - BearerAuth: []
